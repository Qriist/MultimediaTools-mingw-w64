--- CMakeLists.txt.orig	2020-01-18 17:01:46.972822338 +0000
+++ CMakeLists.txt	2020-01-18 17:02:15.404551441 +0000
@@ -75,8 +75,8 @@
 elseif(WIN32)
     set(DJV_PLATFORM_WINDOWS TRUE)
     add_definitions(-DDJV_PLATFORM_WINDOWS)
-	set(CMAKE_C_FLAGS "/MP /EHsc")
-	set(CMAKE_CXX_FLAGS "/MP /EHsc")
+    #	set(CMAKE_C_FLAGS "/MP /EHsc")
+    #	set(CMAKE_CXX_FLAGS "/MP /EHsc")
 endif()
 
 # Set the output directories for the build.
--- cmake/Modules/FindOCIO.cmake.orig	2020-01-24 15:12:03.165692835 +0000
+++ cmake/Modules/FindOCIO.cmake	2020-01-24 15:12:36.445381375 +0000
@@ -43,7 +43,7 @@
     set_target_properties(OCIO::OCIO PROPERTIES
         IMPORTED_LOCATION "${OCIO_LIBRARY}"
         INTERFACE_INCLUDE_DIRECTORIES "${OCIO_INCLUDE_DIRS}"
-		INTERFACE_COMPILE_DEFINITIONS ${OCIO_DEFINES})
+		INTERFACE_COMPILE_DEFINITIONS "${OCIO_DEFINES}")
 endif()
 if(OCIO_FOUND AND NOT TARGET OCIO)
     add_library(OCIO INTERFACE)
--- lib/djvCore/OSWin32.cpp.orig	2020-01-27 12:49:11.266413690 +0000
+++ lib/djvCore/OSWin32.cpp	2020-01-27 12:51:55.864802866 +0000
@@ -31,7 +31,8 @@
 
 #include <djvCore/FileInfo.h>
 #include <djvCore/Memory.h>
-
+#define NTDDI_VERSION 0x06000000
+#define _WIN32_WINNT 0x0600
 #ifndef WIN32_LEAN_AND_MEAN
 #define WIN32_LEAN_AND_MEAN
 #endif // WIN32_LEAN_AND_MEAN
--- lib/djvCore/CMakeLists.txt.orig	2020-01-27 12:58:37.528880701 +0000
+++ lib/djvCore/CMakeLists.txt	2020-01-27 12:58:58.916672088 +0000
@@ -139,7 +139,7 @@
     Threads::Threads
     ${CMAKE_DL_LIBS})
 if (WIN32)
-    set(LIBRARIES ${LIBRARIES} Netapi32.lib mpr.lib)
+    set(LIBRARIES ${LIBRARIES} netapi32.lib mpr.lib)
 elseif (APPLE)
     find_library(CORE_SERVICES CoreServices)
     set(LIBRARIES ${LIBRARIES} ${CORE_SERVICES})
--- cmake/Modules/FindIlmBase.cmake.orig	2020-02-04 22:12:15.376664079 +0000
+++ cmake/Modules/FindIlmBase.cmake	2020-02-04 22:13:31.943857630 +0000
@@ -37,11 +37,11 @@
 find_library(ILMBASE_ILMTHREAD_STATIC_LIBRARY NAMES IlmThread_s)
 find_library(ILMBASE_IMATH_STATIC_LIBRARY NAMES Imath_s)
 if(ILMBASE_SHARED_LIBS)
-    find_library(ILMBASE_HALF_LIBRARY NAMES Half)
-    find_library(ILMBASE_IEX_LIBRARY NAMES Iex)
-    find_library(ILMBASE_IEXMATH_LIBRARY NAMES IexMath)
-    find_library(ILMBASE_ILMTHREAD_LIBRARY NAMES IlmThread)
-    find_library(ILMBASE_IMATH_LIBRARY NAMES Imath)
+    find_library(ILMBASE_HALF_LIBRARY NAMES Half-2_4)
+    find_library(ILMBASE_IEX_LIBRARY NAMES Iex-2_4)
+    find_library(ILMBASE_IEXMATH_LIBRARY NAMES IexMath-2_4)
+    find_library(ILMBASE_ILMTHREAD_LIBRARY NAMES IlmThread-2_4)
+    find_library(ILMBASE_IMATH_LIBRARY NAMES Imath-2_4)
     if(WIN32)
         set(ILMBASE_DEFINES OPENEXR_DLL)
     endif()
--- lib/djvCore/DirectoryWatcherWin32.cpp.orig	2020-02-04 22:29:09.429981659 +0000
+++ lib/djvCore/DirectoryWatcherWin32.cpp	2020-02-04 22:29:34.849713850 +0000
@@ -62,7 +62,7 @@
                 std::condition_variable changedCV;
                 std::mutex mutex;
                 std::thread thread;
-                std::atomic<bool> running = true;
+		std::atomic<bool> running = { true };
                 std::function<void(void)> callback;
                 std::shared_ptr<Time::Timer> timer;
             };
--- lib/djvCore/OSWin32.cpp.orig	2020-02-04 22:28:40.446287015 +0000
+++ lib/djvCore/OSWin32.cpp	2020-02-04 22:30:31.009122182 +0000
@@ -40,10 +40,10 @@
 #define NOMINMAX
 #endif // NOMINMAX
 #include <windows.h>
-#include <Shlobj.h>
+#include <shlobj.h>
 #include <shellapi.h>
 #include <stdlib.h>
-#include <VersionHelpers.h>
+#include <versionhelpers.h>
 
 #include <codecvt>
 #include <locale>
--- lib/djvCore/CMakeLists.txt.orig	2020-02-04 22:38:04.132348218 +0000
+++ lib/djvCore/CMakeLists.txt	2020-02-04 22:38:44.903918657 +0000
@@ -139,7 +139,7 @@
     Threads::Threads
     ${CMAKE_DL_LIBS})
 if (WIN32)
-    set(LIBRARIES ${LIBRARIES} netapi32.lib mpr.lib)
+    set(LIBRARIES ${LIBRARIES} msvcr120.lib netapi32.lib mpr.lib)
 elseif (APPLE)
     find_library(CORE_SERVICES CoreServices)
     set(LIBRARIES ${LIBRARIES} ${CORE_SERVICES})
--- lib/djvAV/CMakeLists.txt.orig	2020-02-04 22:55:02.643479825 +0000
+++ lib/djvAV/CMakeLists.txt	2020-02-04 22:55:21.079341269 +0000
@@ -151,7 +151,7 @@
 	OCIO
     IlmBase
     #OpenAL
-    RtAudio
+    rtaudio
     OpenGL::GL
     djvCore)
 if(FFmpeg_FOUND)
--- CMakeLists.txt.orig	2020-02-04 22:56:39.030739915 +0000
+++ CMakeLists.txt	2020-02-04 22:57:07.462514823 +0000
@@ -344,7 +344,7 @@
 
 add_subdirectory(third-party)
 add_subdirectory(lib)
-add_subdirectory(tests)
+#add_subdirectory(tests)
 if(NOT DJV_BUILD_TINY)
     if(DJV_BUILD_BIN)
         add_subdirectory(bin)
--- bin/djv/win.rc.orig	2020-02-06 18:36:03.506931711 +0000
+++ bin/djv/win.rc	2020-02-06 18:36:17.118797808 +0000
@@ -1,3 +1,3 @@
 #include "winrc.h"
 
-DJV_ICON ICON "..\\..\\etc\\Windows\\djv.ico"
+DJV_ICON ICON "../../etc/Windows/djv.ico"
--- lib/djvCore/Core.h.orig	2020-02-08 11:30:55.806774567 +0000
+++ lib/djvCore/Core.h	2020-02-08 11:31:10.978629111 +0000
@@ -77,7 +77,7 @@
 
 #if defined(DJV_PLATFORM_WINDOWS)
 //! \bug [S 1.0] https://social.msdn.microsoft.com/Forums/vstudio/en-US/8f40dcd8-c67f-4eba-9134-a19b9178e481/vs-2015-rc-linker-stdcodecvt-error?forum=vcgeneral
-typedef unsigned int djv_char_t;
+typedef char16_t djv_char_t;
 #define DJV_SNPRINTF sprintf_s
 #define DJV_STRNCPY strncpy_s
 #else // DJV_PLATFORM_WINDOWS
--- lib/djvAV/Audio.h.orig	2020-04-04 21:54:48.715943723 +0100
+++ lib/djvAV/Audio.h	2020-04-04 21:55:06.291765310 +0100
@@ -37,7 +37,7 @@
 //#include <AL/al.h>
 //#include <AL/alc.h>
 //#include <AL/alext.h>
-#include <RtAudio.h>
+#include <rtaudio/RtAudio.h>
 
 #include <limits>
 
--- lib/djvAV/AudioSystem.cpp.orig	2020-04-04 23:00:06.524020720 +0100
+++ lib/djvAV/AudioSystem.cpp	2020-04-04 23:00:21.919864050 +0100
@@ -34,7 +34,7 @@
 #include <djvCore/Error.h>
 #include <djvCore/OS.h>
 
-#include <RtAudio.h>
+#include <rtaudio/RtAudio.h>
 
 using namespace djv::Core;
 
--- lib/djvViewApp/Media.h.orig	2020-04-04 23:06:40.396012651 +0100
+++ lib/djvViewApp/Media.h	2020-04-04 23:06:55.683857081 +0100
@@ -36,7 +36,7 @@
 #include <djvCore/ListObserver.h>
 #include <djvCore/ValueObserver.h>
 
-#include <RtAudio.h>
+#include <rtaudio/RtAudio.h>
 
 namespace djv
 {
--- lib/djvViewApp/Media.cpp.orig	2020-04-04 23:13:16.811978708 +0100
+++ lib/djvViewApp/Media.cpp	2020-04-04 23:13:31.151832785 +0100
@@ -37,7 +37,7 @@
 #include <djvCore/LogSystem.h>
 #include <djvCore/Timer.h>
 
-#include <RtAudio.h>
+#include <rtaudio/RtAudio.h>
 
 using namespace djv::Core;
 
