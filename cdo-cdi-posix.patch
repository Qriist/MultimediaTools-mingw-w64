--- libcdi/src/input_file.c.orig	2021-05-22 18:43:36.343322500 +0100
+++ libcdi/src/input_file.c	2021-05-22 18:48:52.113322500 +0100
@@ -9,6 +9,7 @@
 #include <pthread.h>
 #include <string.h>
 #include <unistd.h>
+#include <basetsd.h>
 
 static void cdiInputFile_destruct(CdiInputFile* me);
 
@@ -99,6 +100,20 @@
   return result;
 }
 
+static ssize_t pread(int fd, void* buf, size_t count, off_t offset) {
+	off_t orig_offset = lseek(fd, 0, SEEK_CUR);
+	if (orig_offset == (off_t)-1)
+		return -1;
+	if (lseek(fd, offset, SEEK_CUR) == (off_t)-1)
+		return -1;
+	ssize_t len = read(fd, buf, count);
+	if (len < 0)
+		return len;
+	if (lseek(fd, orig_offset, SEEK_SET) == (off_t)-1)
+		return -1;
+	return len;
+}
+
 int cdiInputFile_read(const CdiInputFile* me, off_t readPosition, size_t readSize, size_t* outActualReadSize, void* buffer)
 {
   char* byteBuffer = (char *)buffer;
--- /dev/null	2021-05-15 15:23:50.100000000 +0100
+++ libcdi/src/cdi_rand.h	2021-05-22 19:03:49.303322500 +0100
@@ -0,0 +1,3 @@
+char *setstate(const char *);
+char *initstate(unsigned int, char *, size_t);
+long random(void);
--- libcdi/src/util.c.orig	2021-05-22 19:01:04.363322500 +0100
+++ libcdi/src/util.c	2021-05-22 19:04:57.853322500 +0100
@@ -12,6 +12,7 @@
 #include "cdi.h"
 #include "cdi_int.h"
 #include "cdi_uuid.h"
+#include "cdi_rand.h"
 #include "dmemory.h"
 
 
--- libcdi/src/Makefile.am.orig	2021-05-22 19:08:36.693322500 +0100
+++ libcdi/src/Makefile.am	2021-05-22 19:10:41.963322500 +0100
@@ -179,6 +179,7 @@
 	$(libcdi_la_HAVE_LIBGRIB_API_extra_sources) \
 	$(libcdipio_la_HAVE_PARALLEL_NC4_extra_sources)
 
+libcdi_la_LIBADD = -lposixrandom
 libcdi_la_LDFLAGS = -no-undefined -version-info 0:0:0 
 
 libcdi_f2003_la_SOURCES = mo_cdi.f90
 
--- src/cdo_options.h.orig	2021-05-23 10:03:26.983322500 +0100
+++ src/cdo_options.h	2021-05-23 10:08:49.293322500 +0100
@@ -17,6 +17,9 @@
 #ifndef CDO_OPTIONS_H
 #define CDO_OPTIONS_H
 
+#include <thread>
+#include <mutex>
+#include <shared_mutex>
 #include <vector>
 #include <string>
 
--- src/Makefile.am.orig	2021-05-23 14:53:40.943322500 +0100
+++ src/Makefile.am	2021-05-23 14:54:10.533322500 +0100
@@ -1,3 +1,4 @@
+DEFAULT_INCLUDES =
 ## Process this file with automake to produce Makefile.in
 noinst_LTLIBRARIES = libcdo.la
 libcdo_la_SOURCES =                     after_dvtrans.cc          \
--- src/cdo.cc.orig	2021-05-23 15:40:32.163322500 +0100
+++ src/cdo.cc	2021-05-23 15:40:51.723322500 +0100
@@ -43,7 +43,7 @@
 #include "cdo_rlimit.h"
 #include "cdo_task.h"
 #include <mpim_grid.h>
-#include <griddes.h>
+#include "griddes.h"
 #include "cdo_default_values.h"
 #include "cdo_cdi_wrapper.h"
 #include "param_conversion.h"
--- src/mpim_grid/grid_proj.cc.orig	2021-05-23 15:47:11.853322500 +0100
+++ src/mpim_grid/grid_proj.cc	2021-05-23 15:48:23.233322500 +0100
@@ -28,10 +28,10 @@
 #include <vector>
 
 #include <cdi.h>
-#include "cdo_options.h"
+#include "../cdo_options.h"
 #include "grid_proj.h"
-#include "cdo_output.h"
-#include "compare.h"
+#include "../cdo_output.h"
+#include "../compare.h"
 
 static void
 set_xyvals(const double val, const size_t nvals, double *xvals, double *yvals)
--- src/mpim_grid/mpim_grid.cc.orig	2021-05-23 15:54:06.253322500 +0100
+++ src/mpim_grid/mpim_grid.cc	2021-05-23 15:54:26.693322500 +0100
@@ -33,8 +33,8 @@
 #include "grid_convert.h"
 #include "grid_rot.h"
 
-#include "compare.h"
-#include "cdo_output.h"
+#include "../compare.h"
+#include "../cdo_output.h"
 
 bool gridVerbose = false;
 
--- libcdi/app/Makefile.am.orig	2021-05-25 16:45:07.873322500 +0100
+++ libcdi/app/Makefile.am	2021-05-25 16:45:43.563322500 +0100
@@ -22,7 +22,7 @@
 endif
 #
 createtable_SOURCES = createtable.c
-createtable_LDADD   = $(top_builddir)/src/libcdi.la
+createtable_LDADD   = $(top_builddir)/src/libcdi.la -lmingwex
 if ENABLE_ALL_STATIC
 createtable_LDFLAGS = -all-static
 endif
--- libcdi/src/gribapi_utilities.c.orig	2021-05-25 16:55:26.103322500 +0100
+++ libcdi/src/gribapi_utilities.c	2021-05-25 17:02:55.623322500 +0100
@@ -172,7 +172,11 @@
 {
   char* temp = getenv("TZ"), *result = NULL;
   if(temp) result = strdup(temp);
+#ifdef _WIN32
+  (void)_putenv_s("TZ", "UTC");
+#else
   setenv("TZ", "UTC", 1);
+#endif
   return result;
 }
 
@@ -181,12 +185,20 @@
 {
   if(savedTz)
     {
+#ifdef _WIN32
+      (void)_putenv_s("TZ", savedTz);
+#else
       setenv("TZ", savedTz, 1);
+#endif
       Free(savedTz);
     }
   else
     {
+#if _WIN32
+	    (void)_putenv_s("TZ", "");
+#else
       unsetenv("TZ");
+#endif
     }
 }
 
