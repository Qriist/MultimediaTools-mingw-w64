--- CMakeLists.txt.orig	2018-06-07 12:17:32.435758800 +0100
+++ CMakeLists.txt	2018-06-07 12:18:27.861816500 +0100
@@ -79,10 +79,11 @@
 function(glslang_set_link_args TARGET)
     # For MinGW compiles, statically link against the GCC and C++ runtimes.
     # This avoids the need to ship those runtimes as DLLs.
-    if(WIN32 AND ${CMAKE_CXX_COMPILER_ID} MATCHES "GNU")
-        set_target_properties(${TARGET} PROPERTIES
-                              LINK_FLAGS "-static -static-libgcc -static-libstdc++")
-    endif()
+    # JW addition: we are happy to ship DLLs.
+    #if(WIN32 AND ${CMAKE_CXX_COMPILER_ID} MATCHES "GNU")
+    #    set_target_properties(${TARGET} PROPERTIES
+    #                          LINK_FLAGS "-static -static-libgcc -static-libstdc++")
+    #endif()
 endfunction(glslang_set_link_args)
 
 # We depend on these for later projects, so they should come first.
@@@--- StandAlone/CMakeLists.txt.orig	2018-06-09 09:36:48.489868600 +0100
@@@+++ StandAlone/CMakeLists.txt	2018-06-09 09:37:10.333816200 +0100
@@@@@ -44,9 +44,9 @@
@@@ 
@@@     install(TARGETS spirv-remap
@@@             RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
@@@-            
@@@+
@@@     if(BUILD_SHARED_LIBS)
@@@         install(TARGETS glslang-default-resource-limits
@@@-                LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
@@@+            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
@@@     endif()
@@@ endif(ENABLE_GLSLANG_INSTALL)
--- hlsl/CMakeLists.txt.orig	2018-06-09 09:48:49.042537000 +0100
+++ hlsl/CMakeLists.txt	2018-06-09 09:49:19.293688500 +0100
@@ -20,6 +20,7 @@
 add_library(HLSL ${LIB_TYPE} ${SOURCES} ${HEADERS})
 set_property(TARGET HLSL PROPERTY FOLDER hlsl)
 set_property(TARGET HLSL PROPERTY POSITION_INDEPENDENT_CODE ON)
+target_link_libraries(glslang)
 
 if(WIN32 AND BUILD_SHARED_LIBS)
     set_target_properties(HLSL PROPERTIES PREFIX "")
