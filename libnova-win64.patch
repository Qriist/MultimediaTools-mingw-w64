--- src/julian_day.c.orig	2021-02-07 12:26:57.180000000 +0000
+++ src/julian_day.c	2021-02-07 12:31:25.600000000 +0000
@@ -16,10 +16,6 @@
  *  Copyright (C) 2000 - 2005 Liam Girdwood <lgirdwood@gmail.com>
  */
 
-#if defined(__MINGW__) || defined(__MINGW32__) || defined(__MINGW64__)
-#define _USE_32BIT_TIME_T
-#endif	//__MINGW__
-
 #include <time.h>
 #include <string.h>
 #include <stdlib.h>
@@ -196,17 +192,30 @@
 void ln_get_date_from_sys(struct ln_date *date)
 {
 	struct tm * gmt;
+#ifdef __WIN32__
+	struct posix_timeval tv;
+	struct posix_timezone tz;
+#else
 	struct timeval tv;
 	struct timezone tz;
+#endif
 
 	/* get current time with microseconds precission*/
 	gettimeofday(&tv, &tz);
 
 	/* convert to UTC time representation */
+#ifdef __WIN32__
+	gmt = gmtime(&tv.posix_tv_sec);
+#else
 	gmt = gmtime(&tv.tv_sec);
+#endif
     	
 	/* fill in date struct */
+#ifdef __WIN32__
+	date->seconds = gmt->tm_sec + ((double)tv.posix_tv_usec / 1000000);
+#else
 	date->seconds = gmt->tm_sec + ((double)tv.tv_usec / 1000000);
+#endif
 	date->minutes = gmt->tm_min;
 	date->hours = gmt->tm_hour;
 	date->days = gmt->tm_mday;
--- src/libnova/ln_types.h.orig	2021-02-07 12:31:57.270000000 +0000
+++ src/libnova/ln_types.h	2021-02-07 12:33:00.360000000 +0000
@@ -335,16 +335,16 @@
 
 #include <time.h>
 
-struct timeval
+struct posix_timeval
 {
-	time_t  tv_sec;         /* count of seconds since Jan. 1, 1970 */
-	long    tv_usec;        /* and microseconds */
+	time_t  posix_tv_sec;         /* count of seconds since Jan. 1, 1970 */
+	long    posix_tv_usec;        /* and microseconds */
 };
 
-struct timezone
+struct posix_timezone
 {
-	int     tz_minuteswest; /* Minutes west of GMT */
-	int     tz_dsttime;     /* DST correction offset */
+	int     posix_tz_minuteswest; /* Minutes west of GMT */
+	int     posix_tz_dsttime;     /* DST correction offset */
 };
 
 #endif /* __WIN32__ */
--- src/libnova/utility.h.orig	2021-02-07 12:33:40.370000000 +0000
+++ src/libnova/utility.h	2021-02-07 12:34:52.770000000 +0000
@@ -21,12 +21,6 @@
 
 #include <libnova/ln_types.h>
 
-#ifdef __WIN32__
-#include <time.h>
-// cbrt replacement
-#define cbrt(x)   pow(x,1.0/3.0)
-#endif //! __WIN32__
-
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -231,7 +225,7 @@
 
 #ifndef __MINGW__
 /* Catches calls to the POSIX gettimeofday and converts them to a related WIN32 version. */
-int gettimeofday(struct timeval *tp, struct timezone *tzp);
+int gettimeofday(struct posix_timeval *tp, struct posix_timezone *tzp);
 #endif // !__MINGW__
 
 /* Catches calls to the POSIX strtok_r and converts them to a related WIN32 version. */
--- src/utility.c.orig	2021-02-07 12:35:28.710000000 +0000
+++ src/utility.c	2021-02-07 12:36:33.590000000 +0000
@@ -685,17 +685,17 @@
 #ifndef __MINGW__
 
 /* Catches calls to the POSIX gettimeofday and converts them to a related WIN32 version. */
-int gettimeofday(struct timeval *tv, struct timezone *tz)
+int gettimeofday(struct posix_timeval *tv, struct posix_timezone *tz)
 {
 	struct _timeb timeptr;
 
 	_ftime_s (&timeptr);
 
-	tv->tv_sec = timeptr.time;
-	tv->tv_usec = timeptr.millitm * 1000;
+	tv->posix_tv_sec = timeptr.time;
+	tv->posix_tv_usec = timeptr.millitm * 1000;
 
-	tz->tz_dsttime = timeptr.dstflag;
-	tz->tz_dsttime = timeptr.timezone;
+	tz->posix_tz_dsttime = timeptr.dstflag;
+	tz->posix_tz_dsttime = timeptr.timezone;
 
 	return 0;
 }
--- src/libnova/ln_types.h.orig	2021-02-07 12:52:51.500000000 +0000
+++ src/libnova/ln_types.h	2021-02-07 12:54:10.270000000 +0000
@@ -331,7 +331,7 @@
 	double ecliptic;	/*!< Mean obliquity of the ecliptic, in degrees */
 };
 
-#if defined(__WIN32__) && !defined(__MINGW__)
+#ifdef __WIN32__
 
 #include <time.h>
 
--- lntest/test.c.orig	2021-02-07 12:57:52.060000000 +0000
+++ lntest/test.c	2021-02-07 12:59:32.230000000 +0000
@@ -51,7 +51,7 @@
 // holds number of tests
 static int test_number = 0;
 
-static struct timeval start, end;
+static struct posix_timeval start, end;
 
 static void start_timer(void)
 {
@@ -63,8 +63,8 @@
 	double secs;
 
 	gettimeofday(&end, NULL);
-	secs = ((end.tv_sec * 1000000 + end.tv_usec) -
-		(start.tv_sec * 1000000 + start.tv_usec)) / 1000000.0;
+	secs = ((end.posix_tv_sec * 1000000 + end.posix_tv_usec) -
+		(start.posix_tv_sec * 1000000 + start.posix_tv_usec)) / 1000000.0;
 
 	fprintf(stdout, "   Time %3.1f msecs\n", secs * 1000.0);
 }
--- lntest/test.c.orig	2021-02-07 13:02:37.730000000 +0000
+++ lntest/test.c	2021-02-07 13:02:48.460000000 +0000
@@ -18,10 +18,6 @@
 
 #define _GNU_SOURCE
 
-#if defined(__MINGW__) || defined(__MINGW32__) || defined(__MINGW64__)
-#define _USE_32BIT_TIME_T
-#endif	//__MINGW__
-
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
