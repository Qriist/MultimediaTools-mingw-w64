--- wscript.orig	2016-07-26 14:56:43.586000000 +0000
+++ wscript	2016-07-26 15:00:58.355000000 +0000
@@ -845,27 +845,31 @@
     create_driver_obj(
         bld,
         target = 'dummy',
+        use = ['serverlib'],
         source = dummy_src)
 
     create_driver_obj(
         bld,
         target = 'loopback',
+        use = ['serverlib'],
         source = loopback_src)
 
     create_driver_obj(
         bld,
         target = 'net',
+        use = ['serverlib'],
         source = net_src)
 
     create_driver_obj(
         bld,
         target = 'netone',
         source = netone_src,
-        use = ['SAMPLERATE', 'CELT'])
+        use = ['serverlib', 'SAMPLERATE', 'CELT'])
 
     create_driver_obj(
         bld,
         target = 'proxy',
+        use = ['serverlib'],
         source = proxy_src)
 
     # Create hardware driver objects. Lexically sorted after the conditional,
--- common/JackProxyDriver.cpp.orig	2016-07-26 15:03:27.664000000 +0000
+++ common/JackProxyDriver.cpp	2016-07-26 15:53:56.958000000 +0000
@@ -24,6 +24,23 @@
 #include "JackWaitCallbackDriver.h"
 #include "JackProxyDriver.h"
 
+#if _WIN32
+inline int setenv(const char* name, const char* value, int) {
+    static const char* const kFakeZero = "0";
+    if (*value == '\0')
+        value = kFakeZero;
+    const size_t nameval_len = strlen(name) + 1 + strlen(value) + 1;
+    char* nameval = reinterpret_cast<char*>(malloc(nameval_len));
+//    snprintf(nameval, nameval_len, "%s=%s", name, value);
+    _putenv(nameval);
+    if (value == kFakeZero) {
+        nameval[nameval_len - 2] = '\0';   // works when putenv() makes no copy
+        if (*getenv(name) != '\0')
+            *getenv(name) = '\0';            // works when putenv() copies nameval
+    }
+}
+#endif
+
 using namespace std;
 
 namespace Jack
@@ -174,7 +191,11 @@
                     }
                     free(old);
                 } else {
+#if _WIN32
+                    setenv("JACK_PROMISCUOUS_SERVER", "", 1);
+#else
                     unsetenv("JACK_PROMISCUOUS_SERVER");
+#endif
                 }
             }
 
--- common/JackProxyDriver.cpp.orig	2017-07-17 09:35:19.466995700 +0100
+++ common/JackProxyDriver.cpp	2017-07-17 09:36:01.057817300 +0100
@@ -24,7 +24,7 @@
 #include "JackWaitCallbackDriver.h"
 #include "JackProxyDriver.h"
 
-#if _WIN32
+#if 0 // This is actually defined in windows/JackSystemDeps_os.h
 inline int setenv(const char* name, const char* value, int) {
     static const char* const kFakeZero = "0";
     if (*value == '\0')
--- common/JackConstants.h.orig	2020-06-27 21:59:01.050000000 +0100
+++ common/JackConstants.h	2020-06-27 21:59:42.840000000 +0100
@@ -88,4 +88,6 @@
 
 #define JACK_DEFAULT_SELF_CONNECT_MODE ' ' /* allow all requests */
 
+#define ADDON_DIR "jack"
+
 #endif
