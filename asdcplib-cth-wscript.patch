--- wscript.orig	2017-09-06 19:52:46.970416700 +0100
+++ wscript	2017-09-06 19:54:20.586301300 +0100
@@ -60,7 +60,7 @@
     			    int main() { boost::filesystem::copy_file ("a", "b"); }\n
 			    """,
                    msg='Checking for boost filesystem library',
-                   libpath='/usr/local/lib',
+                   libpath='lib',
                    lib=['boost_filesystem%s' % boost_lib_suffix, 'boost_system%s' % boost_lib_suffix],
                    uselib_store='BOOST_FILESYSTEM')
 
--- wscript.orig	2019-02-10 15:56:22.575573129 +0000
+++ wscript	2019-02-10 15:56:31.807469945 +0000
@@ -44,7 +44,7 @@
     conf.check_cfg(package='openssl', args='--cflags --libs', uselib_store='OPENSSL', mandatory=True)
 
     if conf.options.target_windows:
-        boost_lib_suffix = '-mt'
+        boost_lib_suffix = '-mt-x64'
     else:
         boost_lib_suffix = ''
 
--- cscript.orig	2019-02-11 13:54:04.931619924 +0000
+++ cscript	2019-02-11 13:54:40.867274132 +0000
@@ -6,7 +6,7 @@
     elif target.platform == 'windows':
         cmd += ' --target-windows'
 
-    target.append_with_space('LIBS', '-lboost_system')
-    target.append_with_space('LIBS', '-lboost_filesystem')
+    target.append_with_space('LIBS', '-lboost_system-mt-x64')
+    target.append_with_space('LIBS', '-lboost_filesystem-mt-x64')
     target.command(cmd)
     target.command('./waf build install')
--- wscript.orig	2019-02-11 13:56:23.363355285 +0000
+++ wscript	2019-02-11 13:56:34.811356570 +0000
@@ -80,7 +80,7 @@
 
 def build(bld):
     if bld.env.TARGET_WINDOWS:
-        boost_lib_suffix = '-mt'
+        boost_lib_suffix = '-mt-x64'
         flags = '-DKM_WIN32'
     else:
         boost_lib_suffix = ''
--- wscript.orig	2020-10-08 17:34:32.620000000 +0100
+++ wscript	2020-10-08 17:35:55.240000000 +0100
@@ -9,15 +9,7 @@
 
 APPNAME = 'libasdcp-carl'
 
-if os.path.exists('.git'):
-    this_version = subprocess.Popen(shlex.split('git tag -l --points-at HEAD'), stdout=subprocess.PIPE).communicate()[0].decode('utf-8')
-    last_version = subprocess.Popen(shlex.split('git describe --tags --abbrev=0'), stdout=subprocess.PIPE).communicate()[0]
-    if this_version == '':
-        VERSION = '%sdevel' % last_version[1:].strip()
-    else:
-        VERSION = this_version[1:].strip()
-else:
-    VERSION = open('VERSION').read().strip()
+VERSION = '2.0.14'
 
 def options(opt):
     opt.load('compiler_cxx')
