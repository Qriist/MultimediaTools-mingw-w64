--- IlmBase/IlmThread/IlmThread.h.orig	2020-01-21 21:32:30.427567516 +0000
+++ IlmBase/IlmThread/IlmThread.h	2020-01-21 21:34:41.058311080 +0000
@@ -106,7 +106,15 @@
 #      include <pthread.h>
 #   endif
 #else
-#   include <thread>
+#   include <boost/thread.hpp>
+namespace std {
+        using boost::mutex;
+        using boost::recursive_mutex;
+        using boost::lock_guard;
+        using boost::condition_variable;
+        using boost::unique_lock;
+        using boost::thread;
+}
 #endif
 
 ILMTHREAD_INTERNAL_NAMESPACE_HEADER_ENTER
--- IlmBase/IlmThread/IlmThreadMutex.h.orig	2020-01-21 21:47:51.166567075 +0000
+++ IlmBase/IlmThread/IlmThreadMutex.h	2020-01-21 21:48:55.937926429 +0000
@@ -81,7 +81,15 @@
 #      include <pthread.h>
 #   endif
 #else
-#   include <mutex>
+#   include <boost/thread.hpp>
+namespace std {
+        using boost::mutex;
+        using boost::recursive_mutex;
+        using boost::lock_guard;
+        using boost::condition_variable;
+        using boost::unique_lock;
+        using boost::thread;
+}
 #endif
 
 ILMTHREAD_INTERNAL_NAMESPACE_HEADER_ENTER
--- IlmBase/IlmThread/IlmThreadPool.cpp.orig	2020-01-21 21:58:56.179954350 +0000
+++ IlmBase/IlmThread/IlmThreadPool.cpp	2020-01-21 21:59:34.483573023 +0000
@@ -672,7 +672,7 @@
     // this will be 0 99.999% of the time, but just to be safe)
     // 
     while ( provUsers.load( std::memory_order_relaxed ) > 0 )
-        std::this_thread::yield();
+        boost::this_thread::yield();
 
     if ( old )
     {
--- IlmBase/IlmThread/CMakeLists.txt.orig	2020-01-21 23:27:00.581584173 +0000
+++ IlmBase/IlmThread/CMakeLists.txt	2020-01-21 23:27:22.989343537 +0000
@@ -27,5 +27,6 @@
     IlmThreadForward.h
   DEPENDENCIES
     IlmBase::Iex
+    boost_thread-mt-x64
     Threads::Threads
   )
