--- configure.ac.orig	2022-02-01 20:46:18.202336600 +0000
+++ configure.ac	2022-02-01 20:48:43.142336600 +0000
@@ -3061,47 +3061,10 @@
 
 EXTEND_HELP_STRING([Video plugins:])
 
-dnl
-dnl  OpenGL
-dnl
-PKG_CHECK_MODULES([EGL], [egl], [
-  have_egl="yes"
-], [
   have_egl="no"
-])
-AM_CONDITIONAL([HAVE_EGL], [test "${have_egl}" = "yes"])
-
-have_gl="no"
-PKG_CHECK_MODULES([GL], [gl], [
-  have_gl="yes"
-], [
-  AC_MSG_CHECKING([for OpenGL])
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#ifdef _WIN32
-# include <GL/glew.h>
-#endif
-#include <GL/gl.h>
-]], [
-    [int t0 = GL_TEXTURE0;]])
-  ], [
-    GL_CFLAGS=""
-    have_gl="yes"
-    AS_IF([test "${SYS}" != "mingw32"], [
-      GL_LIBS="-lGL"
-    ], [
-      GL_LIBS="-lopengl32"
-    ])
-  ])
-  AC_MSG_RESULT([${have_gl}])
-])
-AM_CONDITIONAL([HAVE_GL], [test "${have_gl}" = "yes"])
-AS_IF([test "${have_gl}" = "yes"], [
-  AC_DEFINE([HAVE_GL], 1, [Defined if having OpenGL])
-])
-
-dnl OpenGL ES 2: depends on EGL 1.1
-PKG_ENABLE_MODULES_VLC([GLES2], [], [glesv2], [OpenGL ES v2 support], [disabled])
-
+  have_gl="no"
+  GL_CFLAGS=""
+  GL_LIBS=""
 dnl
 dnl  Xlib
 dnl
@@ -3143,6 +3106,7 @@
 
   PKG_CHECK_MODULES(XCB_RANDR, [xcb-randr >= 1.3], [have_xcb_randr="yes"])
 
+
   dnl xcb-utils
   PKG_CHECK_MODULES(XCB_KEYSYMS, [xcb-keysyms >= 0.3.4], [have_xcb_keysyms="yes"], [
     AC_MSG_WARN([${XCB_KEYSYMS_PKG_ERRORS}. Hotkeys will not work.])
@@ -3379,14 +3343,6 @@
     VLC_ADD_PLUGIN([directdraw])
   ])
 
-  dnl OpenGL
-  AC_CHECK_HEADERS(GL/wglew.h, [
-    VLC_ADD_PLUGIN([glwin32 wgl])
-  ],, [
-    #include <windows.h>
-    #include <GL/gl.h>
-  ])
-
   dnl Direct3D11
   AC_CHECK_HEADERS(d3d11.h, [
     VLC_ADD_PLUGIN([direct3d11 direct3d11_filters])
--- modules/video_output/Makefile.am.orig	2022-02-01 20:54:35.852336600 +0000
+++ modules/video_output/Makefile.am	2022-02-01 20:59:11.272336600 +0000
@@ -3,14 +3,6 @@
 
 EXTRA_DIST += video_output/README
 
-OPENGL_COMMONSOURCES = video_output/opengl/vout_helper.c \
-	video_output/opengl/vout_helper.h video_output/opengl/converter.h \
-	video_output/opengl/internal.h video_output/opengl/fragment_shaders.c \
-	video_output/opengl/converter_sw.c
-
-OPENGL_COMMONCLFAGS = $(LIBPLACEBO_CFLAGS)
-OPENGL_COMMONLIBS = $(LIBPLACEBO_LIBS)
-
 if HAVE_DECKLINK
 libdecklinkoutput_plugin_la_SOURCES = video_output/decklink.cpp
 libdecklinkoutput_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CPPFLAGS_decklinkoutput)
@@ -18,109 +10,6 @@
 vout_LTLIBRARIES += libdecklinkoutput_plugin.la
 endif
 
-libglconv_cvpx_plugin_la_SOURCES = video_output/opengl/converter_cvpx.c \
-	video_output/opengl/converter.h
-libglconv_cvpx_plugin_la_LDFLAGS = $(AM_LDFLAGS) -rpath '$(voutdir)'
-
-if HAVE_OSX
-libvout_macosx_plugin_la_SOURCES = video_output/macosx.m $(OPENGL_COMMONSOURCES)
-libvout_macosx_plugin_la_CFLAGS = $(AM_CFLAGS) $(OPENGL_COMMONCLFAGS) -DHAVE_GL_CORE_SYMBOLS
-libvout_macosx_plugin_la_LIBADD = $(OPENGL_COMMONLIBS)
-libvout_macosx_plugin_la_LDFLAGS = $(AM_LDFLAGS) -rpath '$(voutdir)' \
-	-Wl,-framework,OpenGL,-framework,Cocoa
-
-libcaopengllayer_plugin_la_SOURCES = video_output/caopengllayer.m $(OPENGL_COMMONSOURCES)
-libcaopengllayer_plugin_la_CFLAGS = $(AM_CFLAGS) $(OPENGL_COMMONCLFAGS) -DHAVE_GL_CORE_SYMBOLS
-libcaopengllayer_plugin_la_LIBADD = $(OPENGL_COMMONLIBS)
-libcaopengllayer_plugin_la_LDFLAGS = $(AM_LDFLAGS) -rpath '$(voutdir)' \
-	-Wl,-framework,OpenGL,-framework,Cocoa,-framework,QuartzCore
-
-libglconv_cvpx_plugin_la_SOURCES += codec/vt_utils.c codec/vt_utils.h
-libglconv_cvpx_plugin_la_LDFLAGS += -Wl,-framework,IOSurface \
-	-Wl,-framework,Foundation,-framework,CoreVideo,-framework,OpenGL
-vout_LTLIBRARIES += libvout_macosx_plugin.la libcaopengllayer_plugin.la \
-	libglconv_cvpx_plugin.la
-endif
-if HAVE_IOS
-libglconv_cvpx_plugin_la_CFLAGS = $(AM_CFLAGS) -DUSE_OPENGL_ES2
-endif
-
-libvout_ios_plugin_la_SOURCES = video_output/ios.m $(OPENGL_COMMONSOURCES)
-libvout_ios_plugin_la_CFLAGS = $(AM_CFLAGS) $(OPENGL_COMMONCLFAGS) -DUSE_OPENGL_ES2
-libvout_ios_plugin_la_LIBADD = $(OPENGL_COMMONLIBS)
-libvout_ios_plugin_la_LDFLAGS = $(AM_LDFLAGS) -rpath '$(voutdir)' \
-	-Wl,-framework,OpenGLES,-framework,QuartzCore,-framework,UIKit
-if HAVE_IOS
-vout_LTLIBRARIES += libvout_ios_plugin.la libglconv_cvpx_plugin.la
-endif
-if HAVE_TVOS
-vout_LTLIBRARIES += libvout_ios_plugin.la libglconv_cvpx_plugin.la
-endif
-
-### OpenGL ###
-libgles2_plugin_la_SOURCES = $(OPENGL_COMMONSOURCES) video_output/opengl/display.c
-libgles2_plugin_la_CFLAGS = $(AM_CFLAGS) $(GLES2_CFLAGS) -DUSE_OPENGL_ES2 $(OPENGL_COMMONCLFAGS)
-libgles2_plugin_la_LIBADD = $(GLES2_LIBS) $(LIBM) $(OPENGL_COMMONLIBS)
-libgles2_plugin_la_LDFLAGS = $(AM_LDFLAGS) -rpath '$(voutdir)'
-
-EXTRA_LTLIBRARIES += libgles2_plugin.la
-vout_LTLIBRARIES += $(LTLIBgles2)
-
-libgl_plugin_la_SOURCES = $(OPENGL_COMMONSOURCES) video_output/opengl/display.c
-libgl_plugin_la_CFLAGS = $(AM_CFLAGS) $(GL_CFLAGS) $(OPENGL_COMMONCLFAGS)
-libgl_plugin_la_LIBADD = $(LIBM) $(OPENGL_COMMONLIBS)
-if HAVE_WIN32
-libgl_plugin_la_CFLAGS += -DHAVE_GL_CORE_SYMBOLS
-libgl_plugin_la_LIBADD += $(GL_LIBS)
-endif
-
-libglconv_vaapi_wl_plugin_la_SOURCES = video_output/opengl/converter_vaapi.c \
-	video_output/opengl/converter.h \
-	hw/vaapi/vlc_vaapi.c hw/vaapi/vlc_vaapi.h
-libglconv_vaapi_wl_plugin_la_CFLAGS = $(AM_CFLAGS) $(GL_CFLAGS) -DHAVE_VA_WL $(LIBVA_WL_CFLAGS)
-libglconv_vaapi_wl_plugin_la_LIBADD = $(LIBVA_LIBS) $(LIBVA_EGL_LIBS) \
-	$(LIBVA_WL_LIBS)
-
-libglconv_vaapi_x11_plugin_la_SOURCES = $(libglconv_vaapi_wl_plugin_la_SOURCES)
-libglconv_vaapi_x11_plugin_la_CFLAGS = $(AM_CFLAGS) -DHAVE_VA_X11
-libglconv_vaapi_x11_plugin_la_LIBADD = $(LIBVA_LIBS) $(LIBVA_EGL_LIBS) \
-	$(LIBVA_X11_LIBS) $(X_LIBS) $(X_PRE_LIBS) -lX11
-
-libglconv_vaapi_drm_plugin_la_SOURCES = $(libglconv_vaapi_wl_plugin_la_SOURCES)
-libglconv_vaapi_drm_plugin_la_CFLAGS = $(AM_CFLAGS) -DHAVE_VA_DRM
-libglconv_vaapi_drm_plugin_la_LIBADD = $(LIBVA_LIBS) $(LIBVA_EGL_LIBS) \
-	$(LIBVA_DRM_LIBS)
-
-libglconv_vdpau_plugin_la_SOURCES = video_output/opengl/converter_vdpau.c \
-	video_output/opengl/converter.h hw/vdpau/vlc_vdpau.h
-libglconv_vdpau_plugin_la_CFLAGS = $(AM_CFLAGS) $(VDPAU_CFLAGS)
-libglconv_vdpau_plugin_la_LIBADD = $(LIBDL) libvlc_vdpau.la $(X_LIBS) $(X_PRE_LIBS) -lX11
-
-if HAVE_GL
-vout_LTLIBRARIES += libgl_plugin.la
-if HAVE_EGL
-if HAVE_VAAPI
-if HAVE_WAYLAND_EGL
-if HAVE_VAAPI_WL
-vout_LTLIBRARIES += libglconv_vaapi_wl_plugin.la
-endif
-endif
-if HAVE_XCB
-if HAVE_VAAPI_X11
-vout_LTLIBRARIES += libglconv_vaapi_x11_plugin.la
-endif
-endif
-if HAVE_VAAPI_DRM
-vout_LTLIBRARIES += libglconv_vaapi_drm_plugin.la
-endif
-endif
-endif # HAVE_EGL
-
-if HAVE_VDPAU
-vout_LTLIBRARIES += libglconv_vdpau_plugin.la
-endif
-endif # HAVE_GL
-
 ### XCB ###
 libvlc_xcb_events_la_SOURCES = \
 	video_output/xcb/events.c video_output/xcb/events.h
@@ -156,15 +45,6 @@
 	$(XPROTO_CFLAGS) $(XCB_CFLAGS) $(XCB_KEYSYMS_CFLAGS)
 libxcb_window_plugin_la_LIBADD = $(XPROTO_LIBS) $(XCB_LIBS) $(XCB_KEYSYMS_LIBS)
 
-libegl_x11_plugin_la_SOURCES = video_output/opengl/egl.c
-libegl_x11_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_PLATFORM_X11=1
-libegl_x11_plugin_la_CFLAGS = $(AM_CFLAGS) $(EGL_CFLAGS)
-libegl_x11_plugin_la_LIBADD = $(EGL_LIBS) $(X_LIBS) $(X_PRE_LIBS) -lX11
-
-libglx_plugin_la_SOURCES = video_output/glx.c
-libglx_plugin_la_CFLAGS = $(AM_CFLAGS) $(GL_CFLAGS)
-libglx_plugin_la_LIBADD = $(GL_LIBS) $(X_LIBS) $(X_PRE_LIBS) -lX11
-
 if HAVE_XCB
 pkglib_LTLIBRARIES += libvlc_xcb_events.la
 vout_LTLIBRARIES += libxcb_x11_plugin.la libxcb_window_plugin.la
@@ -174,12 +54,6 @@
 if HAVE_XCB_XVIDEO
 vout_LTLIBRARIES += libxcb_xv_plugin.la
 endif
-if HAVE_EGL
-vout_LTLIBRARIES += libegl_x11_plugin.la
-endif
-if HAVE_GL
-vout_LTLIBRARIES += libglx_plugin.la
-endif
 endif
 
 
@@ -231,22 +105,12 @@
 		video_output/wayland/server-decoration.xml
 EXTRA_DIST += video_output/wayland/server-decoration.xml
 
-libegl_wl_plugin_la_SOURCES = video_output/opengl/egl.c
-libegl_wl_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_PLATFORM_WAYLAND=1
-libegl_wl_plugin_la_CFLAGS = $(AM_CFLAGS) $(EGL_CFLAGS) $(WAYLAND_EGL_CFLAGS)
-libegl_wl_plugin_la_LIBADD = $(EGL_LIBS) $(WAYLAND_EGL_LIBS)
-
 if HAVE_WAYLAND
 BUILT_SOURCES += $(nodist_libwl_shm_plugin_la_SOURCES)
 vout_LTLIBRARIES += libwl_shm_plugin.la
 vout_LTLIBRARIES += libwl_shell_plugin.la
 BUILT_SOURCES += $(nodist_libxdg_shell_plugin_la_SOURCES)
 vout_LTLIBRARIES += libxdg_shell_plugin.la
-if HAVE_WAYLAND_EGL
-if HAVE_EGL
-vout_LTLIBRARIES += libegl_wl_plugin.la
-endif
-endif
 endif
 
 
@@ -301,31 +165,6 @@
 EXTRA_LTLIBRARIES += libdirectdraw_plugin.la
 endif
 
-libglwin32_plugin_la_SOURCES = $(OPENGL_COMMONSOURCES) \
-	video_output/win32/glwin32.c \
-	video_output/win32/common.c video_output/win32/common.h \
-	video_output/win32/events.c video_output/win32/events.h \
-	video_output/win32/sensors.cpp \
-	video_output/win32/win32touch.c video_output/win32/win32touch.h
-libwgl_plugin_la_SOURCES = video_output/win32/wgl.c $(OPENGL_COMMONSOURCES)
-
-libglwin32_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) \
-	-DMODULE_NAME_IS_glwin32
-
-libglwin32_plugin_la_LIBADD = libchroma_copy.la -lopengl32 -lgdi32 $(LIBCOM) -luuid $(OPENGL_COMMONLIBS)
-libwgl_plugin_la_LIBADD = -lopengl32 -lgdi32 $(OPENGL_COMMONLIBS)
-
-libglwin32_plugin_la_CFLAGS = $(AM_CFLAGS) $(OPENGL_COMMONCLFAGS) -DHAVE_GL_CORE_SYMBOLS
-libwgl_plugin_la_CFLAGS = $(AM_CFLAGS) $(OPENGL_COMMONCLFAGS)
-
-libglwin32_plugin_la_LDFLAGS = $(AM_LDFLAGS) -rpath '$(voutdir)'
-libwgl_plugin_la_LDFLAGS = $(AM_LDFLAGS) -rpath '$(voutdir)'
-
-if HAVE_WIN32_DESKTOP
-vout_LTLIBRARIES += $(LTLIBglwin32) $(LTLIBwgl)
-EXTRA_LTLIBRARIES += libglwin32_plugin.la libwgl_plugin.la
-endif
-
 libwingdi_plugin_la_SOURCES = video_output/win32/wingdi.c \
 	video_output/win32/common.c video_output/win32/common.h \
 	video_output/win32/events.c video_output/win32/events.h \
@@ -341,16 +180,6 @@
 vout_LTLIBRARIES += libwinhibit_plugin.la
 endif
 
-libegl_win32_plugin_la_SOURCES = video_output/opengl/egl.c
-libegl_win32_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) -DUSE_PLATFORM_WIN32=1
-libegl_win32_plugin_la_CFLAGS = $(AM_CFLAGS) $(EGL_CFLAGS)
-libegl_win32_plugin_la_LIBADD = $(EGL_LIBS)
-if HAVE_WIN32
-if HAVE_EGL
-vout_LTLIBRARIES += libegl_win32_plugin.la
-endif
-endif
-
 libdrawable_plugin_la_SOURCES = video_output/drawable.c
 if HAVE_WIN32
 vout_LTLIBRARIES += libdrawable_plugin.la
@@ -370,30 +199,8 @@
 
 ### Android ###
 
-libegl_android_plugin_la_SOURCES = video_output/opengl/egl.c
-libegl_android_plugin_la_CFLAGS = $(AM_CFLAGS) $(EGL_CFLAGS) -DUSE_PLATFORM_ANDROID=1
-libegl_android_plugin_la_LIBADD = $(EGL_LIBS)
-
-libandroid_window_plugin_la_SOURCES = video_output/android/window.c \
-	video_output/android/utils.c video_output/android/utils.h
-libandroid_window_plugin_la_CFLAGS = $(AM_CFLAGS)
-libandroid_window_plugin_la_LIBADD = $(LIBDL)
-
-libandroid_display_plugin_la_SOURCES = video_output/android/display.c \
-	video_output/android/display.h \
-	video_output/android/utils.c video_output/android/utils.h
-libandroid_display_plugin_la_CFLAGS = $(AM_CFLAGS)
-libandroid_display_plugin_la_LIBADD = $(LIBDL)
-
-libglconv_android_plugin_la_SOURCES = video_output/opengl/converter_android.c \
-	video_output/opengl/converter.h
-libglconv_android_plugin_la_CFLAGS = $(AM_CFLAGS) -DUSE_OPENGL_ES2
-
 if HAVE_ANDROID
 vout_LTLIBRARIES += libandroid_window_plugin.la libandroid_display_plugin.la
-if HAVE_EGL
-vout_LTLIBRARIES += libegl_android_plugin.la libglconv_android_plugin.la
-endif
 endif
 
 
--- modules/visualization/Makefile.am.orig	2022-02-01 21:03:02.622336600 +0000
+++ modules/visualization/Makefile.am	2022-02-01 21:03:32.702336600 +0000
@@ -1,15 +1,6 @@
 visudir = $(pluginsdir)/visualization
 visu_LTLIBRARIES =
 
-libglspectrum_plugin_la_SOURCES = \
-	visualization/glspectrum.c \
-	visualization/visual/fft.c visualization/visual/fft.h \
-	visualization/visual/window.c visualization/visual/window.h \
-	visualization/visual/window_presets.h
-libglspectrum_plugin_la_LIBADD = $(GL_LIBS) $(LIBM)
-if HAVE_GL
-visu_LTLIBRARIES += libglspectrum_plugin.la
-endif
 
 libgoom_plugin_la_SOURCES = visualization/goom.c
 libgoom_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(GOOM_CFLAGS)
