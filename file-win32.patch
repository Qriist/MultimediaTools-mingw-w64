--- magic/Makefile.am.orig	2016-05-05 16:03:00.098000000 +0000
+++ magic/Makefile.am	2016-05-05 16:03:32.336000000 +0000
@@ -286,7 +286,7 @@
 # FIXME: Build file natively as well so that it can be used to compile
 # the target's magic file; for now we bail if the local version does not match
 if IS_CROSS_COMPILE
-FILE_COMPILE = file${EXEEXT}
+FILE_COMPILE = file # ${EXEEXT}
 FILE_COMPILE_DEP =
 else
 FILE_COMPILE = $(top_builddir)/src/file${EXEEXT}
--- magic/Makefile.am.orig	2019-10-30 20:52:33.310000000 +0000
+++ magic/Makefile.am	2019-10-30 20:52:47.670000000 +0000
@@ -323,13 +323,8 @@
 
 # FIXME: Build file natively as well so that it can be used to compile
 # the target's magic file; for now we bail if the local version does not match
-if IS_CROSS_COMPILE
 FILE_COMPILE = file # ${EXEEXT}
 FILE_COMPILE_DEP =
-else
-FILE_COMPILE = $(top_builddir)/src/file${EXEEXT}
-FILE_COMPILE_DEP = $(FILE_COMPILE)
-endif
 
 ${MAGIC}: $(EXTRA_DIST) $(FILE_COMPILE_DEP)
 	@rm -fr magic
--- src/compress.c.orig	2021-11-03 21:12:23.512696900 +0000
+++ src/compress.c	2021-11-03 21:14:05.242696900 +0000
@@ -380,7 +380,7 @@
 sread(int fd, void *buf, size_t n, int canbepipe __attribute__((__unused__)))
 {
 	ssize_t rv;
-#ifdef FIONREAD
+#if defined(FIONREAD) && !defined(WIN32)
 	int t = 0;
 #endif
 	size_t rn = n;
@@ -388,7 +388,7 @@
 	if (fd == STDIN_FILENO)
 		goto nocheck;
 
-#ifdef FIONREAD
+#if defined(FIONREAD) && !defined(WIN32)
 	if (canbepipe && (ioctl(fd, FIONREAD, &t) == -1 || t == 0)) {
 #ifdef FD_ZERO
 		ssize_t cnt;
--- src/funcs.c.orig	2021-11-03 21:14:30.892696900 +0000
+++ src/funcs.c	2021-11-03 21:16:21.292696900 +0000
@@ -813,6 +813,10 @@
 protected int
 file_pipe_closexec(int *fds)
 {
+#ifdef WIN32
+	// F_SETFD is not supported on Windows
+	return 0;
+#else
 #ifdef HAVE_PIPE2
 	return pipe2(fds, O_CLOEXEC);
 #else
@@ -822,11 +826,17 @@
 	(void)fcntl(fds[1], F_SETFD, FD_CLOEXEC);
 	return 0;
 #endif
+#endif
 }
 
 protected int
 file_clear_closexec(int fd) {
+#ifdef WIN32
+	// F_SETFD is not supported on Windows
+	return 0;
+#else
 	return fcntl(fd, F_SETFD, 0);
+#endif
 }
 
 protected char *
--- src/magic.c.orig	2021-11-03 21:16:55.062696900 +0000
+++ src/magic.c	2021-11-03 21:17:54.682696900 +0000
@@ -460,7 +460,8 @@
 			rv = 0;
 			goto done;
 		}
-#if O_CLOEXEC == 0
+#if O_CLOEXEC == 0 && !defined(WIN32)
+		// F_SETFD is not supported on Windows
 		(void)fcntl(fd, F_SETFD, FD_CLOEXEC);
 #endif
 	}
