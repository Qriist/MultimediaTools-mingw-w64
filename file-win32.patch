--- magic/Makefile.am.orig	2016-05-05 16:03:00.098000000 +0000
+++ magic/Makefile.am	2016-05-05 16:03:32.336000000 +0000
@@ -286,7 +286,7 @@
 # FIXME: Build file natively as well so that it can be used to compile
 # the target's magic file; for now we bail if the local version does not match
 if IS_CROSS_COMPILE
-FILE_COMPILE = file${EXEEXT}
+FILE_COMPILE = file # ${EXEEXT}
 FILE_COMPILE_DEP =
 else
 FILE_COMPILE = $(top_builddir)/src/file${EXEEXT}
--- magic/Makefile.am.orig	2019-10-30 20:52:33.310000000 +0000
+++ magic/Makefile.am	2019-10-30 20:52:47.670000000 +0000
@@ -323,13 +323,8 @@
 
 # FIXME: Build file natively as well so that it can be used to compile
 # the target's magic file; for now we bail if the local version does not match
-if IS_CROSS_COMPILE
 FILE_COMPILE = file # ${EXEEXT}
 FILE_COMPILE_DEP =
-else
-FILE_COMPILE = $(top_builddir)/src/file${EXEEXT}
-FILE_COMPILE_DEP = $(FILE_COMPILE)
-endif
 
 ${MAGIC}: $(EXTRA_DIST) $(FILE_COMPILE_DEP)
 	@rm -fr magic
--- src/compress.c.orig	2021-11-03 21:12:23.512696900 +0000
+++ src/compress.c	2021-11-03 21:14:05.242696900 +0000
@@ -380,7 +380,7 @@
 sread(int fd, void *buf, size_t n, int canbepipe __attribute__((__unused__)))
 {
 	ssize_t rv;
-#ifdef FIONREAD
+#if defined(FIONREAD) && !defined(WIN32)
 	int t = 0;
 #endif
 	size_t rn = n;
@@ -388,7 +388,7 @@
 	if (fd == STDIN_FILENO)
 		goto nocheck;
 
-#ifdef FIONREAD
+#if defined(FIONREAD) && !defined(WIN32)
 	if (canbepipe && (ioctl(fd, FIONREAD, &t) == -1 || t == 0)) {
 #ifdef FD_ZERO
 		ssize_t cnt;
--- src/funcs.c.orig	2021-11-03 21:14:30.892696900 +0000
+++ src/funcs.c	2021-11-03 21:16:21.292696900 +0000
@@ -813,6 +813,10 @@
 protected int
 file_pipe_closexec(int *fds)
 {
+#ifdef WIN32
+	// F_SETFD is not supported on Windows
+	return 0;
+#else
 #ifdef HAVE_PIPE2
 	return pipe2(fds, O_CLOEXEC);
 #else
--- src/funcs.c.orig	2021-12-10 22:49:53.637327800 +0000
+++ src/funcs.c	2021-12-10 22:51:44.797327800 +0000
@@ -850,6 +850,7 @@
 # endif
 	return 0;
 #endif
+#endif
 }
 
 protected int
--- src/file.c.orig	2022-07-07 14:44:04.952377700 +0100
+++ src/file.c	2022-07-07 14:44:26.712377700 +0100
@@ -600,7 +600,7 @@
 	for (i = 0; i < n; i++) {
 		unsigned char c = CAST(unsigned char, inname[i]);
 		if (isprint(c)) {
-			putc(c);
+			putc(c, stdout);
 			continue;
 		}
 		file_octal(c);
